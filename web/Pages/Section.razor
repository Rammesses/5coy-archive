@page "/articles/{SectionRef}"

@using Services

@inject HttpClient Http
@inject IArticlesService dataService
@inject IMarkdownService markdownService

@if (section == null)
{
    <h1>All Articles</h1>

    <div class="loading">Loading...</div>
} else
{
    <h1><span class="oi @section.Glyph" aria-hidden="true"></span>
        @section.Title</h1>

    <div class="row">
        <web.Controls.MarkdownView ContentUrl="@section.ContentUrl"/>
    </div>

    <div class="row">
    @foreach (var article in section.Articles)
    {
        <div class="col-md-6">
            <span class="lead">
            @if (!string.IsNullOrEmpty(article.ContentUrl)){
                <a href="/articles/@section.Reference/@article.Reference">@article.Title</a>
            } else {
                @article.Title
            }
            </span>&NonBreakingSpace;
            @if (!string.IsNullOrEmpty(article.PdfUrl)) {
                <a href=@article.PdfUrl target="new" title="Download as PDF">
                    <span class="oi oi-cloud-download" aria-hidden="true"></span>
                </a>
            }
            
            </div>
    }
    </div>
}

@code {

    [Parameter]
    public string SectionRef { get; set; }

    private Models.Section section;

    protected override async Task OnParametersSetAsync()
    {
        section = await dataService.GetSection(SectionRef);
    }
}