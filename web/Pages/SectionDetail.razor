@page "/articles/{SectionRef}"

@using Services

@inject HttpClient Http
@inject IArticlesService dataService
@inject IMarkdownService markdownService

<web.Shared.PageTitle Title="@(section?.Title)" />

@if (section == null)
{
    <h1>All Articles</h1>

    <div class="loading">Loading...</div>
} else
{
    <h1><span class="oi @(section.Glyph)" aria-hidden="true"></span>
        @(section.Title)</h1>

    @if (!string.IsNullOrEmpty(section.Parent?.Reference)) {
        <a href="/articles/@(section.Parent.Reference)"><span class="oi oi-chevron-left"></span>&nbsp;@(section.Parent.Title)</a>
    } 

    <div class="row">
        <web.Controls.MarkdownView ContentUrl="@(section.ContentUrl)"/>
    </div>

    @if (section.Children.Any())
        {
            <div class="row">
            @foreach (var section in section.Children.OrderBy(s => s.Title))
            {
                <div class="col-md-6">
                    <NavLink class="nav-link section-link" href=@(section.Url) Match="NavLinkMatch.All">
                        <span class="oi @(section.Glyph)" aria-hidden="true"></span>
                        @(section.Title)
                    </NavLink>
                </div>
            }
            </div>
            <hr />
        }

    <div class="row">
    @foreach (var article in sectionArticles)
    {
        <div class="col-md-6">
            <span class="lead">
                @if (!string.IsNullOrEmpty(article.Reference)) {
                <a href="/articles/@(section.Reference)/@(article.Reference)">@article.Title</a>
                } else {
                    @article.Title
                }
                &nbsp;
                <web.Controls.PdfDownload PdfUrl="@article.PdfUrl" />
            </span>            
        </div>
    }
    </div>
}

@code {

    [Parameter]
    public string SectionRef { get; set; }

    private Models.Section section;

    private Models.Article[] sectionArticles;

    protected override async Task OnParametersSetAsync()
    {
        section = await dataService.GetSection(SectionRef);
        sectionArticles = await dataService.GetArticles(SectionRef);
    }
}