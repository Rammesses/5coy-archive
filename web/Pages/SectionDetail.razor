@page "/section/{SectionRef}"

@using Services

@inject HttpClient Http
@inject IArticlesService dataService
@inject IMarkdownService markdownService

<web.Shared.PageTitle Title="@sectionData?.Title" />

@if (sectionData == null)
{
    <h1>All Articles</h1>

    <div class="loading">Loading...</div>
} else
{
    <h1><span class="oi @sectionData.Glyph" aria-hidden="true"></span>
        @sectionData.Title</h1>

    @if (!string.IsNullOrEmpty(sectionData.Parent?.Reference)) {
        <a href="/article/@sectionData.Parent.Reference"><span class="oi oi-chevron-left"></span>&nbsp;@sectionData.Parent.Title</a>
    } 

    <div class="row">
        <web.Controls.MarkdownView ContentUrl="@sectionData.ContentUrl"/>
    </div>

    @if (sectionData.Children.Any())
        {
            <div class="row">
            @foreach (var childSection in sectionData.Children.OrderBy(s => s.Title))
            {
                <div class="col-md-6">
                    <NavLink class="section-link" href="@childSection.Url" Match="NavLinkMatch.All">
                        <span class="oi @childSection.Glyph" aria-hidden="true"></span>
                        @childSection.Title
                    </NavLink>
                </div>
            }
            </div>
            <hr />
        }

    <div class="row">
    @foreach (var article in sectionArticles)
    {
        <div class="col-md-6">
            <span class="lead">
                @if (!string.IsNullOrEmpty(article.Reference)) {
                <a href="/article/@sectionData.Reference/@article.Reference">@article.Title</a>
                } else {
                    @article.Title
                }
                &nbsp;
                <web.Controls.PdfDownload PdfUrl="@article.PdfUrl" />
            </span>            
        </div>
    }
    </div>
}

@code {

    [Parameter]
    public string SectionRef { get; set; }

    private Models.Section<Models.Article> sectionData;

    private Models.Article[] sectionArticles;

    protected override async Task OnParametersSetAsync()
    {
        sectionData = await dataService.GetSection(SectionRef);
        sectionArticles = await dataService.GetItems(SectionRef);
    }
}