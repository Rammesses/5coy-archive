@page "/article/{SectionRef}/{ArticleRef}"

@using Services

@inject IArticlesService dataService

<web.Shared.PageTitle Title="@articleData?.Title" />


@if (sectionData == null || articleData == null)
{
    <div class="loading">Loading...</div>

    @if(allArticles != null)
    {
        <h4>All Articles in @SectionRef</h4>

        <ul>
        @foreach(var article in allArticles)
        {
            <li>@article.Reference - @article.Title</li>
        }
        </ul>
    }
} else
{
    <h1><span class="sectionIcon oi @sectionData.Glyph" aria-hidden="true"></span>@articleData.Title
    <span style="float:right"><web.Controls.PdfViewButton PdfUrl="@articleData.PdfUrl" /></span>
    </h1>
    <h5>
        @if (!string.IsNullOrEmpty(sectionData.Reference)) {
        <a href="/section/@sectionData.Reference"><span class="oi oi-chevron-left"></span>&nbsp;@sectionData.Title</a>
        } else {
            @sectionData.Title
        }

        @if (!string.IsNullOrEmpty(articleData.Parent?.Reference)) {
        <a href="/article/@sectionData.Reference/@articleData.Parent.Reference"><span class="oi oi-chevron-left"></span>&nbsp;@articleData.Parent.Title</a>
        } 
    </h5>
    @if (articleData.Children.Any())
    {
        <hr />
        <h5>Related:</h5>
        <web.Controls.RelatedArticlesView Articles=@articleData.Children Section=@(sectionData) />
    }
    <hr />
    <div>
        <web.Controls.MarkdownView ContentUrl="@articleData.ContentUrl"/>
    </div>
}

@code {

    [Parameter]
    public string SectionRef { get; set; }

    [Parameter]
    public string ArticleRef { get; set; }

    private Models.Section<Models.Article> sectionData;
    private Models.Article[] allArticles;
    private Models.Article articleData;

    protected override async Task OnParametersSetAsync()
    {
        sectionData = await dataService.GetSection(SectionRef);
        allArticles = await dataService.GetAllItemsInTree(SectionRef);
        articleData = await dataService.GetItem(SectionRef, ArticleRef);
    }
}